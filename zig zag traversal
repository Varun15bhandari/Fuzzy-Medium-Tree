/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        List<List<Integer>>result=new ArrayList<>();
        if(root==null)return result;
        Queue<TreeNode>q=new LinkedList<>();
        boolean leftToRight=true;
        q.add(root);
        while(!q.isEmpty()){
            int numElements=q.size();
             List<Integer> currentLevel = new ArrayList(Collections.nCopies(numElements, 0));
            for(int i=0;i<numElements;i++){
                TreeNode node=q.poll();
                 int index=leftToRight?i:numElements-i-1;
               currentLevel.set(index,node.val);
               if( node.left!=null){
                q.add(node.left);
               }
               if(node.right!=null){
                q.add(node.right);
               }
            }
            leftToRight=!(leftToRight);
            result.add(currentLevel);

        }
        return result;
    }
}
